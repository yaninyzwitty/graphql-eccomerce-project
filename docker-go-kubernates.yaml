apiVersion: apps/v1
kind: Deployment
metadata:
  name: gqlgen-ecommerce-project
  labels:
    app: gqlgen-ecommerce-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gqlgen-ecommerce-project
  template:
    metadata:
      labels:
        app: gqlgen-ecommerce-project
    spec:
      containers:
        - name: gqlgen-ecommerce-project
          image: yaninyzwitty/gqlgen-eccomerce-project:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: db-secrets
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: app-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: gqlgen-ecommerce-project
  labels:
    app: gqlgen-ecommerce-project
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30001
  selector:
    app: gqlgen-ecommerce-project
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_DB
            - name: POSTGRES_PASSWORD_FILE
              value: /run/secrets/pg_password
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  USERNAME: "default-user"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
type: Opaque
stringData:
  POSTGRES_USER: ian
  POSTGRES_DB: witty
  pg_password: mypassword
